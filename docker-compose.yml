version: '3'
services:
  traefik:
    image: traefik:1.7
    container_name: traefik
    networks:
      - gitlab
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - './traefik.toml:/etc/traefik/traefik.toml'
      - '/srv/gitlab/ssl:/ssl'
      - '/var/run/docker.sock:/var/run/docker.sock'
    restart: unless-stopped
    labels:
      - "traefik.docker.network=gitlab"
      - "traefik.enable=true"
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:traefik.example.com"

  gitlab:
    image: 'gitlab/gitlab-ce:latest'
    container_name: gitlab
    hostname: gitlab.example.com
    networks:
      - gitlab
    restart: always
    ports:
      - '2222:22'
    labels:
      - "traefik.docker.network=gitlab"
      - "traefik.enable=true"
      - "traefik.gitlab.port=80"
      - "traefik.gitlab.frontend.rule=Host:gitlab.example.com"
      - "traefik.registry.port=5100"
      - "traefik.registry.frontend.rule=Host:registry.gitlab.example.com"
    healthcheck:
      disable: true
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'https://gitlab.example.com'
        nginx['listen_port'] = 80
        nginx['listen_https'] = false
        nginx['http2_enabled'] = false

        nginx['proxy_set_headers'] = {
          "Host" => "$$http_host",
          "X-Real-IP" => "$$remote_addr",
          "X-Forwarded-For" => "$$proxy_add_x_forwarded_for",
          "X-Forwarded-Proto" => "https",
          "X-Forwarded-Ssl" => "on"
        }

        gitlab_rails['gitlab_shell_ssh_port'] = 2222

        registry['enable'] = true
        registry_external_url 'https://registry.gitlab.example.com:5100'
        registry_nginx['listen_port'] = 5100
        registry_nginx['listen_https'] = false
        registry_nginx['ssl_certificate'] = "/ssl/registry.crt"
        registry_nginx['ssl_certificate_key'] = "/ssl/registry.key"
        registry_nginx['ssl_dhparam'] = "/ssl/registry.pem"

        registry_nginx['proxy_set_headers'] = {
          "Host" => "$$http_host",
          "X-Real-IP" => "$$remote_addr",
          "X-Forwarded-For" => "$$proxy_add_x_forwarded_for",
          "X-Forwarded-Proto" => "https",
          "X-Forwarded-Ssl" => "on"
        }

        postgresql['enable'] = false
        gitlab_rails['db_username'] = "${POSTGRES_USER:-gitlabci}"
        gitlab_rails['db_password'] = "${POSTGRES_PASSWORD:-password}"
        gitlab_rails['db_host'] = "postgresql"
        gitlab_rails['db_port'] = "5432"
        gitlab_rails['db_database'] = ""${POSTGRES_DATABASE:-gitlabci}""
        gitlab_rails['db_adapter'] = "postgresql"
        gitlab_rails['db_encoding'] = "utf8"
    volumes:
      - '/srv/gitlab/ssl:/ssl'
    volumes:
      - /srv/gitlab/config:/etc/gitlab
      - /srv/gitlab/logs:/var/log/gitlab
      - /srv/gitlab/data:/var/opt/gitlab

  github-runner:
    image: 'gitlab/gitlab-runner'
    container_name: gitlabrunner
    restart: always
    networks:
      - gitlab
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /srv/gitlab/runner/config:/etc/gitlab-runner
      - /srv/gitlab/data:/var/opt/gitlab

  postgresql:
    image: postgres:10
    container_name: postgresql
    restart: always
    networks:
      - gitlab
    volumes:
      - /srv/gitlab/postgresql/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-gitlabci}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB_EXTENSION=pg_trgm

networks:
  gitlab:

